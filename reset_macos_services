#!/bin/bash

# macOS Services Reset Script
# Safely restarts Finder, Dock, SystemUIServer, and networking services.

# Color Codes
INFO="\033[1;34m[INFO]\033[0m"
WARN="\033[1;33m[WARN]\033[0m"
ERROR="\033[1;31m[ERROR]\033[0m"

# Function to check command existence
check_command() {
    command -v "$1" >/dev/null 2>&1
}

# Function to restart a process safely
restart_process() {
    local process="$1"
    if pgrep "$process" >/dev/null; then
        echo -e "$INFO Restarting $process..."
        killall "$process"
        sleep 2
    else
        echo -e "$WARN $process is not running. Skipping..."
    fi
}

# Function to reload a daemon safely
reload_daemon() {
    local daemon="$1"
    local plist_path="/System/Library/LaunchDaemons/$daemon.plist"

    if [ -f "$plist_path" ]; then
        echo -e "$INFO Restarting $daemon..."
        sudo launchctl unload -w "$plist_path" && sudo launchctl load -w "$plist_path"
    else
        echo -e "$ERROR Daemon $daemon does not exist!"
    fi
}

# Safe Exit Handler
safe_exit() {
    echo -e "$INFO Cleanup complete. Exiting safely."
    exit 0
}

# Trap to catch Ctrl+C and exit safely
trap safe_exit SIGINT SIGTERM

echo -e "$INFO Starting macOS services reset..."

# Restart Finder safely
if check_command osascript; then
    echo -e "$INFO Restarting Finder..."
    osascript -e 'tell application "Finder" to quit'
    sleep 2
    open /System/Library/CoreServices/Finder.app
else
    restart_process "Finder"
fi

# Restart Dock safely
restart_process "Dock"

# Restart SystemUIServer
restart_process "SystemUIServer"

# Restart network services (mDNSResponder is the modern equivalent of discoveryd)
reload_daemon "com.apple.mDNSResponder"

# Restart efilogin-helper (login screen rendering service)
reload_daemon "com.apple.efilogin-helper"

echo -e "$INFO All selected macOS services have been restarted."

safe_exit
